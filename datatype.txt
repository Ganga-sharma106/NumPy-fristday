i - integer
b - boolean
u - unsigned integer
f - float
c - complex float
m - timedelta
M - datetime
O - object
S - string
U - unicode string

Reshaping means changing the shape of an array.
V - fixed chunk of memory for other type ( void )

COPY - The copy SHOULD NOT be affected by the changes made to the original array.
VIEW - The view SHOULD be affected by the changes made to the original array.

Shap - NumPy arrays have an attribute called shape that returns a tuple with each index having the number of corresponding elements.

ndmin - ndmin ensures a minimum number of dimensions and The shape of the array changes based on the ndmin value.

Reshaping - changing the shape of an array.

Understanding the Shape (2, 3, 2)
2 → Number of blocks (Depth)
3 → Number of rows per block
2 → Number of columns per row

reshape(2, 2, -1) allows NumPy to automatically compute the missing dimension.

Flattening array - converting a multidimensional array into a 1D array.(We can use reshape(-1) to do this.)

Sorting array - means putting elements in an ordered sequence.(using sort() )

 Filtering Arrays - If the value at an index is True that element is contained in the filtered array, 
                     if the value at that index is False that element is excluded from the filtered array.

Searching Arrays:-
You can search an array for a certain value, and return the indexes that get a match.(use the where() method.)


searchsorted() which performs a binary search in the array, 
and returns the index where the specified value would be inserted to maintain the search order.

np.nditer efficiently iterates over NumPy arrays.
The buffered flag allows temporary data type conversion.
The op_dtypes=['S'] converts integer elements into byte strings.

arr[:, ::2]
: → Selects all rows.
::2 → Selects every second column (i.e., columns at index 0 and 2)

arr[:, ::1]
: → Selects all rows.
::1 → Selects every column with step 1 (which means it does not skip any columns).
Since ::1 keeps all columns unchanged, this slicing does nothing and returns the same array.

np.ndenumerate() - 
It enumerates over a NumPy array and returns both:
The index (as a tuple).
The value at that index.
It works for both 1D and multi-dimensional arrays.

stacking is done along a new axis.
axis=1 means concatenation is done horizontally (column-wise).
axis=0 (Row-wise Stacking)

hstack() to stack along rows.

vstack()  to stack along columns.

dstack() to stack along height, which is the same as depth.

randint - Built in funtion that print the random integer value.

rand - print float random value bw 0 and 1.

The choice() method allows you to generate a random value based on an array of values.
The choice() method takes an array as a parameter and randomly returns one of the values.

Data Distribution is a list of all possible values, and how often each value occurs.

The shuffle() method makes changes to the original array.

The permutation() method returns a re-arranged array (and leaves the original array un-changed).

Distplot stands for distribution plot, it takes as input an array and plots a curve corresponding to the distribution of points in the array.

Seabor lib : - 

matplotlib.pyplot → Used for plotting graphs.
seaborn → A statistical data visualization library built on top of Matplotlib.
sns.distplot() (deprecated in newer versions of Seaborn) is used to plot a distribution (histogram) of data.
The input is [0, 1, 2, 3, 4, 5], a simple list of numbers.
This function creates a histogram and overlays a Kernel Density Estimate (KDE) curve by default.

Breakdown of the Plot Components:-
Histogram: A bar chart representing the frequency of values in the dataset.
Kernel Density Estimate (KDE): A smooth curve that estimates the probability density of the dataset.
plt.show() renders the generated plot.

normal distribution :
Mean (loc=1) → The center of the distribution.
Standard Deviation (scale=2) → Controls the spread of the values.
Size (size=(2, 3)) → Defines the shape of the output array.

frompyfunc() method takes the following arguments:

function - the name of the function.
inputs - the number of input arguments (arrays).
outputs - the number of output arrays.

divmod() function return both the quotient and the mod.